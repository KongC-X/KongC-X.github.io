(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{421:function(t,a,s){"use strict";s.r(a);var e=s(33),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[t._v("#")]),t._v(" Linux")]),t._v(" "),s("h2",{attrs:{id:"linux-vs-windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-vs-windows"}},[t._v("#")]),t._v(" Linux vs Windows")]),t._v(" "),s("p",[t._v("目前国内 Linux 更多的是应用于服务器上，而桌面操作系统更多使用的是 Windows。主要区别如下")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("比较")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Windows")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Linux")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("界面")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("界面统一，外壳程序固定所有 Windows 程序菜单几乎一致，快捷键也几乎相同")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("图形界面风格依发布版不同而不同，可能互不兼容。GNU/Linux 的终端机是从 UNIX 传承下来，基本命令和操作方法也几乎一致。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("驱动程序")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("驱动程序丰富，版本更新频繁。默认安装程序里面一般包含有该版本发布时流行的硬件驱动程序，之后所出的新硬件驱动依赖于硬件厂商提供。对于一些老硬件，如果没有了原配的驱动有时很难支持。另外，有时硬件厂商未提供所需版本的 Windows 下的驱动，也会比较头痛。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("由志愿者开发，由 Linux 核心开发小组发布，很多硬件厂商基于版权考虑并未提供驱动程序，尽管多数无需手动安装，但是涉及安装则相对复杂，使得新用户面对驱动程序问题（是否存在和安装方法）会一筹莫展。但是在开源开发模式下，许多老硬件尽管在 Windows 下很难支持的也容易找到驱动。HP、Intel、AMD 等硬件厂商逐步不同程度支持开源驱动，问题正在得到缓解。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("使用")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("使用比较简单，容易入门。图形化界面对没有计算机背景知识的用户使用十分有利。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("图形界面使用简单，容易入门。文字界面，需要学习才能掌握。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("学习")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("系统构造复杂、变化频繁，且知识、技能淘汰快，深入学习困难。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("系统构造简单、稳定，且知识、技能传承性好，深入学习相对容易。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("软件")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("每一种特定功能可能都需要商业软件的支持，需要购买相应的授权。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("大部分软件都可以自由获取，同样功能的软件选择较少。")])])])]),t._v(" "),s("h2",{attrs:{id:"linux-系统目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-系统目录结构"}},[t._v("#")]),t._v(" Linux 系统目录结构")]),t._v(" "),s("p",[t._v("登录系统后，在当前命令窗口下输入命令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" ls /\n")])])]),s("p",[t._v("你会看到如下图所示:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2014/06/4_20.png",alt:"img"}})]),t._v(" "),s("p",[t._v("树状目录结构：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2014/06/003vPl7Rty6E8kZRlAEdc690.jpg",alt:"img"}})]),t._v(" "),s("p",[t._v("在 Linux 或 Unix 操作系统中，所有的文件和目录都被组织成以一个根节点开始的倒置的树状结构。")]),t._v(" "),s("p",[t._v("文件系统的最顶层是由根目录开始的，系统使用 "),s("strong",[t._v("/")]),t._v(" 来表示根目录。在根目录之下的既可以是目录，也可以是文件，而每一个目录中又可以包含子目录文件。如此反复就可以构成一个庞大的文件系统。")]),t._v(" "),s("p",[t._v("在 Linux 文件系统中有两个特殊的目录，一个用户所在的工作目录，也叫当前目录，可以使用一个点 "),s("strong",[t._v(".")]),t._v(" 来表示；另一个是当前目录的上一级目录，也叫父目录，可以使用两个点 "),s("strong",[t._v("..")]),t._v(" 来表示。")]),t._v(" "),s("ul",[s("li",[t._v(". ：代表当前的目录，也可以使用 ./ 来表示；")]),t._v(" "),s("li",[t._v(".. ：代表上一层目录，也可以 ../ 来代表。")])]),t._v(" "),s("p",[t._v("如果一个目录或文件名以一个点 . 开始，表示这个目录或文件是一个隐藏目录或文件(如：.bashrc)。即以默认方式查找时，不显示该目录或文件。")]),t._v(" "),s("p",[s("strong",[t._v("系统启动必须：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("**/boot：**存放的启动 Linux 时使用的内核文件，包括连接文件以及镜像文件。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/etc："),s("strong",[t._v("存放")]),t._v("所有")]),t._v("的系统需要的"),s("strong",[t._v("配置文件")]),t._v("和**子目录列表，**更改目录下的文件可能会导致系统不能启动。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/lib")]),t._v("：存放基本代码库（比如 c++库），其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/sys")]),t._v("： 这是 linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。sysfs 文件系统集成了下面 3 种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中")])])]),t._v(" "),s("p",[s("strong",[t._v("指令集合：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("**/bin：**存放着最常用的程序和指令")])]),t._v(" "),s("li",[s("p",[t._v("**/sbin：**只有系统管理员能使用的程序和指令。")])])]),t._v(" "),s("p",[s("strong",[t._v("外部文件管理：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("**/dev ：**Device(设备)的缩写, 存放的是 Linux 的外部设备。**注意：**在 Linux 中访问设备和访问文件的方式是相同的。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/media")]),t._v("：类 windows 的**其他设备，**例如 U 盘、光驱等等，识别后 linux 会把设备放到这个目录下。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/mnt")]),t._v("：临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。")])])]),t._v(" "),s("p",[s("strong",[t._v("临时文件：")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("/run")]),t._v("：是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/lost+found")]),t._v("：一般情况下为空的，系统非法关机后，这里就存放一些文件。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/tmp")]),t._v("：这个目录是用来存放一些临时文件的。")])])]),t._v(" "),s("p",[s("strong",[t._v("账户：")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("/root")]),t._v("：系统管理员的用户主目录。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/home")]),t._v("：用户的主目录，以用户的账号命名的。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/usr")]),t._v("：用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。")])]),t._v(" "),s("li",[s("p",[t._v("**/usr/bin：**系统用户使用的应用程序与指令。")])]),t._v(" "),s("li",[s("p",[t._v("**/usr/sbin：**超级用户使用的比较高级的管理程序和系统守护程序。")])]),t._v(" "),s("li",[s("p",[t._v("**/usr/src：**内核源代码默认的放置目录。")])])]),t._v(" "),s("p",[s("strong",[t._v("运行过程中要用：")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("/var")]),t._v("：存放经常修改的数据，比如程序运行的日志文件（/var/log 目录下）。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/proc")]),t._v("：管理**内存空间！**虚拟的目录，是系统内存的映射，我们可以直接访问这个目录来，获取系统信息。这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件来做修改。")])])]),t._v(" "),s("p",[s("strong",[t._v("扩展用的：")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("/opt")]),t._v("：默认是空的，我们安装额外软件可以放在这个里面。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("/srv")]),t._v("：存放服务启动后需要提取的数据**（不用服务器就是空）**")])])]),t._v(" "),s("h2",{attrs:{id:"linux-文件基本属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-文件基本属性"}},[t._v("#")]),t._v(" Linux 文件基本属性")]),t._v(" "),s("p",[t._v("Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。")]),t._v(" "),s("p",[t._v("在 Linux 中我们可以使用 ll 或者 ls –l 命令来显示一个文件的属性以及文件所属的用户和组，如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www /]# ls -l\ntotal 64\ndr-xr-xr-x   2 root root 4096 Dec 14  2012 bin\ndr-xr-xr-x   4 root root 4096 Apr 19  2012 boot\n……\n")])])]),s("p",[t._v('实例中，bin 文件的第一个属性用"d"表示。"d"在 Linux 中代表该文件是一个目录文件。')]),t._v(" "),s("p",[t._v("在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。")]),t._v(" "),s("ul",[s("li",[t._v("当为[ "),s("strong",[t._v("d")]),t._v(" ]则是目录")]),t._v(" "),s("li",[t._v("当为[ "),s("strong",[t._v("-")]),t._v(" ]则是文件；")]),t._v(" "),s("li",[t._v("若是[ "),s("strong",[t._v("l")]),t._v(" ]则表示为链接文档(link file)；")]),t._v(" "),s("li",[t._v("若是[ "),s("strong",[t._v("b")]),t._v(" ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；")]),t._v(" "),s("li",[t._v("若是[ "),s("strong",[t._v("c")]),t._v(" ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。")])]),t._v(" "),s("p",[t._v("接下来的字符中，以三个为一组，且均为『rwx』 的三个参数的组合。其中，[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。")]),t._v(" "),s("p",[t._v("每个文件的属性由左边第一部分的 10 个字符来确定（如下图）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2014/06/363003_1227493859FdXT.png",alt:"363003_1227493859FdXT"}})]),t._v(" "),s("p",[t._v("从左至右用 0-9 这些数字来表示。")]),t._v(" "),s("p",[t._v("第 0 位确定文件类型，第 1-3 位确定属主（该文件的所有者）拥有该文件的权限。")]),t._v(" "),s("p",[t._v("第 4-6 位确定属组（所有者的同组用户）拥有该文件的权限，第 7-9 位确定其他用户拥有该文件的权限。")]),t._v(" "),s("p",[t._v('其中，第 1、4、7 位表示读权限，如果用"r"字符表示，则有读权限，如果用"-"字符表示，则没有读权限；')]),t._v(" "),s("p",[t._v('第 2、5、8 位表示写权限，如果用"w"字符表示，则有写权限，如果用"-"字符表示没有写权限；第 3、6、9 位表示可执行权限，如果用"x"字符表示，则有执行权限，如果用"-"字符表示，则没有执行权限。')]),t._v(" "),s("h3",{attrs:{id:"linux-文件属主和属组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-文件属主和属组"}},[t._v("#")]),t._v(" Linux 文件属主和属组")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www /]# ls -l\ntotal 64\ndrwxr-xr-x 2 root  root  4096 Feb 15 14:46 cron\ndrwxr-xr-x 3 mysql mysql 4096 Apr 21  2014 mysql\n……\n")])])]),s("p",[t._v("对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。")]),t._v(" "),s("p",[t._v("同时，在 Linux 系统中，用户是按组分类的，一个用户属于一个或多个组。")]),t._v(" "),s("p",[t._v("文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。")]),t._v(" "),s("p",[t._v("因此，Linux 系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。")]),t._v(" "),s("p",[t._v("在以上实例中，mysql 文件是一个目录文件，属主和属组都为 mysql，属主有可读、可写、可执行的权限；与属主同组的其他用户有可读和可执行的权限；其他用户也有可读和可执行的权限。")]),t._v(" "),s("p",[t._v("对于 root 用户来说，一般情况下，文件的权限对其不起作用。")]),t._v(" "),s("h3",{attrs:{id:"更改文件属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更改文件属性"}},[t._v("#")]),t._v(" 更改文件属性")]),t._v(" "),s("h4",{attrs:{id:"_1、chgrp：更改文件属组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、chgrp：更改文件属组"}},[t._v("#")]),t._v(" 1、chgrp：更改文件属组")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("chgrp [-R] 属组名 文件名\n")])])]),s("p",[t._v("参数选项")]),t._v(" "),s("ul",[s("li",[t._v("-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R 的参数，那么该目录下的所有文件的属组都会更改。")])]),t._v(" "),s("h4",{attrs:{id:"_2、chown：更改文件属主，也可以同时更改文件属组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、chown：更改文件属主，也可以同时更改文件属组"}},[t._v("#")]),t._v(" 2、chown：更改文件属主，也可以同时更改文件属组")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("chown [–R] 属主名 文件名\nchown [-R] 属主名：属组名 文件名\n")])])]),s("p",[t._v("进入 /root 目录（~）将 install.log 的拥有者改为 bin 这个账号：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~] cd ~\n[root@www ~]# chown bin install.log\n[root@www ~]# ls -l\n-rw-r--r--  1 bin  users 68495 Jun 25 08:53 install.log\n")])])]),s("p",[t._v("将 install.log 的拥有者与群组改回为 root：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# chown root:root install.log\n[root@www ~]# ls -l\n-rw-r--r--  1 root root 68495 Jun 25 08:53 install.log\n")])])]),s("h4",{attrs:{id:"_3、chmod：更改文件-9-个属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、chmod：更改文件-9-个属性"}},[t._v("#")]),t._v(" 3、chmod：更改文件 9 个属性")]),t._v(" "),s("p",[t._v("Linux 文件属性有两种设置方法，一种是数字，一种是符号。")]),t._v(" "),s("p",[t._v("Linux 文件的基本权限就有九个，分别是 owner/group/others 三种身份各有自己的 read/write/execute 权限。")]),t._v(" "),s("p",[t._v("先复习一下刚刚上面提到的数据：文件的权限字符为：『-rwxrwxrwx』， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：")]),t._v(" "),s("ul",[s("li",[t._v("r:4")]),t._v(" "),s("li",[t._v("w:2")]),t._v(" "),s("li",[t._v("x:1")])]),t._v(" "),s("p",[t._v("每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx---] 分数则是：")]),t._v(" "),s("ul",[s("li",[t._v("owner = rwx = 4+2+1 = 7")]),t._v(" "),s("li",[t._v("group = rwx = 4+2+1 = 7")]),t._v(" "),s("li",[t._v("others= --- = 0+0+0 = 0")])]),t._v(" "),s("p",[t._v("所以等一下我们设定权限的变更时，该文件的权限数字就是 770 啦！变更权限的指令 chmod 的语法是这样的：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" chmod [-R] xyz 文件或目录\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("xyz : 就是刚刚提到的数字类型的权限属性，为 rwx 属性数值的相加。")]),t._v(" "),s("li",[t._v("-R : 进行递归(recursive)的持续变更，亦即连同次目录下的所有文件都会变更")])]),t._v(" "),s("p",[t._v("举例来说，如果要将.bashrc 这个文件所有的权限都设定启用，那么命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# ls -al .bashrc\n-rw-r--r--  1 root root 395 Jul  4 11:45 .bashrc\n[root@www ~]# chmod 777 .bashrc\n[root@www ~]# ls -al .bashrc\n-rwxrwxrwx  1 root root 395 Jul  4 11:45 .bashrc\n")])])]),s("p",[t._v("那如果要将权限变成 "),s("em",[t._v("-rwxr-xr--")]),t._v(" 呢？那么权限的分数就成为 [4+2+1][4+0+1][4+0+0]=754。")]),t._v(" "),s("h4",{attrs:{id:"符号类型改变文件权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#符号类型改变文件权限"}},[t._v("#")]),t._v(" 符号类型改变文件权限")]),t._v(" "),s("p",[t._v("还有一个改变权限的方法，从之前的介绍中我们可以发现，基本上就九个权限分别是：")]),t._v(" "),s("ul",[s("li",[t._v("(1)user")]),t._v(" "),s("li",[t._v("(2)group")]),t._v(" "),s("li",[t._v("(3)others")])]),t._v(" "),s("p",[t._v("那么我们就可以使用 "),s("strong",[t._v("u, g, o")]),t._v(" 来代表三种身份的权限！")]),t._v(" "),s("p",[t._v("此外， "),s("strong",[t._v("a")]),t._v(" 则代表 "),s("strong",[t._v("all")]),t._v("，即全部的身份。读写的权限可以写成 "),s("strong",[t._v("r, w, x")]),t._v("，也就是可以使用下表的方式来看：")]),t._v(" "),s("p",[s("img",{attrs:{src:"C:%5CUsers%5CHW%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200505141604236.png",alt:"image-20200505141604236"}})]),t._v(" "),s("p",[t._v("如果我们需要将文件权限设置为 "),s("strong",[t._v("-rwxr-xr--")]),t._v(" ，可以使用 "),s("strong",[t._v("chmod u=rwx,g=rx,o=r 文件名")]),t._v(" 来设定:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#  touch test1    // 创建 test1 文件\n# ls -al test1    // 查看 test1 默认权限\n-rw-r--r-- 1 root root 0 Nov 15 10:32 test1\n# chmod u=rwx,g=rx,o=r  test1    // 修改 test1 权限\n# ls -al test1\n-rwxr-xr-- 1 root root 0 Nov 15 10:32 test1\n")])])]),s("p",[t._v("而如果是要将权限去掉而不改变其他已存在的权限呢？例如要拿掉全部人的可执行权限，则：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#  chmod  a-x test1\n# ls -al test1\n-rw-r--r-- 1 root root 0 Nov 15 10:32 test1\n")])])]),s("h2",{attrs:{id:"linux-文件与目录管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-文件与目录管理"}},[t._v("#")]),t._v(" Linux 文件与目录管理")]),t._v(" "),s("p",[t._v("我们知道 Linux 的目录结构为树状结构，最顶级的目录为根目录 /。")]),t._v(" "),s("p",[t._v("其他目录通过挂载可以将它们添加到树中，通过解除挂载可以移除它们。")]),t._v(" "),s("p",[t._v("在开始本教程前我们需要先知道什么是绝对路径与相对路径。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("绝对路径：")]),t._v("\n路径的写法，由根目录 / 写起，例如： /usr/share/doc 这个目录。")]),t._v(" "),s("li",[s("strong",[t._v("相对路径：")]),t._v("\n路径的写法，不是由 / 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成： cd ../man 这就是相对路径的写法啦！")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"处理目录的常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理目录的常用命令"}},[t._v("#")]),t._v(" 处理目录的常用命令")]),t._v(" "),s("p",[t._v("接下来我们就来看几个常见的处理目录的命令吧：")]),t._v(" "),s("ul",[s("li",[t._v("ls: 列出目录及文件名")]),t._v(" "),s("li",[t._v("cd：切换目录")]),t._v(" "),s("li",[t._v("pwd：显示目前的目录")]),t._v(" "),s("li",[t._v("mkdir：创建一个新的目录")]),t._v(" "),s("li",[t._v("rmdir：删除一个空的目录")]),t._v(" "),s("li",[t._v("cp: 复制文件或目录")]),t._v(" "),s("li",[t._v("rm: 移除文件或目录")]),t._v(" "),s("li",[t._v("mv: 移动文件与目录，或修改文件与目录的名称")])]),t._v(" "),s("p",[t._v("你可以使用 "),s("em",[t._v("man [命令]")]),t._v(" 来查看各个命令的使用文档，如 ：man cp。")]),t._v(" "),s("h4",{attrs:{id:"ls-列出目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ls-列出目录"}},[t._v("#")]),t._v(" ls (列出目录)")]),t._v(" "),s("p",[t._v("在 Linux 系统当中， ls 命令可能是最常被运行的。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# ls [-aAdfFhilnrRSt] 目录名称\n[root@www ~]# ls [--color={never,auto,always}] 目录名称\n[root@www ~]# ls [--full-time] 目录名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-a ：全部的文件，连同隐藏文件( 开头为 . 的文件) 一起列出来(常用)")]),t._v(" "),s("li",[t._v("-d ：仅列出目录本身，而不是列出目录内的文件数据(常用)")]),t._v(" "),s("li",[t._v("-l ：长数据串列出，包含文件的属性与权限等等数据；(常用)")])]),t._v(" "),s("p",[t._v("将家目录下的所有文件列出来(含属性与隐藏档)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# ls -al ~\n")])])]),s("h4",{attrs:{id:"cd-切换目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cd-切换目录"}},[t._v("#")]),t._v(" cd (切换目录)")]),t._v(" "),s("p",[t._v("cd 是 Change Directory 的缩写，这是用来变换工作目录的命令。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" cd [相对路径或绝对路径]\n#使用 mkdir 命令创建 runoob 目录\n[root@www ~]# mkdir runoob\n\n#使用绝对路径切换到 runoob 目录\n[root@www ~]# cd /root/runoob/\n\n#使用相对路径切换到 runoob 目录\n[root@www ~]# cd ./runoob/\n\n# 表示回到自己的家目录，亦即是 /root 这个目录\n[root@www runoob]# cd ~\n\n# 表示去到目前的上一级目录，亦即是 /root 的上一级目录的意思；\n[root@www ~]# cd ..\n")])])]),s("p",[t._v("接下来大家多操作几次应该就可以很好的理解 cd 命令的。")]),t._v(" "),s("h4",{attrs:{id:"pwd-显示目前所在的目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pwd-显示目前所在的目录"}},[t._v("#")]),t._v(" pwd (显示目前所在的目录)")]),t._v(" "),s("p",[t._v("pwd 是 "),s("strong",[t._v("Print Working Directory")]),t._v(" 的缩写，也就是显示目前所在目录的命令。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# pwd [-P]\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("-P")]),t._v(" ：显示出确实的路径，而非使用连结 (link) 路径。")])]),t._v(" "),s("p",[t._v("实例：单纯显示出目前的工作目录：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# pwd\n/root   <== 显示出目录啦～\n")])])]),s("p",[t._v("实例显示出实际的工作目录，而非连结档本身的目录名而已。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# cd /var/mail   <==注意，/var/mail是一个连结档\n[root@www mail]# pwd\n/var/mail         <==列出目前的工作目录\n[root@www mail]# pwd -P\n/var/spool/mail   <==怎么回事？有没有加 -P 差很多～\n[root@www mail]# ls -ld /var/mail\nlrwxrwxrwx 1 root root 10 Sep  4 17:54 /var/mail -> spool/mail\n# 看到这里应该知道为啥了吧？因为 /var/mail 是连结档，连结到 /var/spool/mail\n# 所以，加上 pwd -P 的选项后，会不以连结档的数据显示，而是显示正确的完整路径啊！\n")])])]),s("h4",{attrs:{id:"mkdir-创建新目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mkdir-创建新目录"}},[t._v("#")]),t._v(" mkdir (创建新目录)")]),t._v(" "),s("p",[t._v("如果想要创建新的目录的话，那么就使用 mkdir (make directory)吧。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mkdir [-mp] 目录名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～")]),t._v(" "),s("li",[t._v("-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！")])]),t._v(" "),s("p",[t._v("实例：请到/tmp 底下尝试创建数个新目录看看：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# cd /tmp\n[root@www tmp]# mkdir test    <==创建一名为 test 的新目录\n[root@www tmp]# mkdir test1/test2/test3/test4\nmkdir: cannot create directory `test1/test2/test3/test4':\nNo such file or directory       <== 没办法直接创建此目录啊！\n[root@www tmp]# mkdir -p test1/test2/test3/test4\n")])])]),s("p",[t._v("加了这个 -p 的选项，可以自行帮你创建多层目录！")]),t._v(" "),s("p",[t._v("实例：创建权限为 "),s("strong",[t._v("rwx--x--x")]),t._v(" 的目录。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]# mkdir -m 711 test2\n[root@www tmp]# ls -l\ndrwxr-xr-x  3 root  root 4096 Jul 18 12:50 test\ndrwxr-xr-x  3 root  root 4096 Jul 18 12:53 test1\ndrwx--x--x  2 root  root 4096 Jul 18 12:54 test2\n")])])]),s("p",[t._v("上面的权限部分，如果没有加上 -m 来强制配置属性，系统会使用默认属性。")]),t._v(" "),s("p",[t._v("如果我们使用 -m ，如上例我们给予 -m 711 来给予新的目录 drwx--x--x 的权限。")]),t._v(" "),s("h4",{attrs:{id:"rmdir-删除空的目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rmdir-删除空的目录"}},[t._v("#")]),t._v(" rmdir (删除空的目录)")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" rmdir [-p] 目录名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("**-p ：**连同上一级『空的』目录也一起删除")])]),t._v(" "),s("p",[t._v("删除 runoob 目录")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]# rmdir runoob/\n")])])]),s("p",[t._v("将 mkdir 实例中创建的目录(/tmp 底下)删除掉！")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]# ls -l   <==看看有多少目录存在？\ndrwxr-xr-x  3 root  root 4096 Jul 18 12:50 test\ndrwxr-xr-x  3 root  root 4096 Jul 18 12:53 test1\ndrwx--x--x  2 root  root 4096 Jul 18 12:54 test2\n[root@www tmp]# rmdir test   <==可直接删除掉，没问题\n[root@www tmp]# rmdir test1  <==因为尚有内容，所以无法删除！\nrmdir: `test1': Directory not empty\n[root@www tmp]# rmdir -p test1/test2/test3/test4\n[root@www tmp]# ls -l        <==您看看，底下的输出中test与test1不见了！\ndrwx--x--x  2 root  root 4096 Jul 18 12:54 test2\n")])])]),s("p",[t._v("利用 -p 这个选项，立刻就可以将 test1/test2/test3/test4 一次删除。")]),t._v(" "),s("p",[t._v("不过要注意的是，这个 rmdir 仅能删除空的目录，你可以使用 rm 命令来删除非空目录。")]),t._v(" "),s("h4",{attrs:{id:"cp-复制文件或目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cp-复制文件或目录"}},[t._v("#")]),t._v(" cp (复制文件或目录)")]),t._v(" "),s("p",[t._v("cp 即拷贝文件和目录。")]),t._v(" "),s("p",[t._v("语法:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# cp [-adfilprsu] 来源档(source) 目标档(destination)\n[root@www ~]# cp [options] source1 source2 source3 .... directory\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("**-a：**相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)")]),t._v(" "),s("li",[t._v("**-d：**若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；")]),t._v(" "),s("li",[t._v("**-f：**为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；")]),t._v(" "),s("li",[t._v("**-i：**若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)")]),t._v(" "),s("li",[t._v("**-l：**进行硬式连结(hard link)的连结档创建，而非复制文件本身；")]),t._v(" "),s("li",[t._v("**-p：**连同文件的属性一起复制过去，而非使用默认属性(备份常用)；")]),t._v(" "),s("li",[t._v("**-r：**递归持续复制，用於目录的复制行为；(常用)")]),t._v(" "),s("li",[t._v("**-s：**复制成为符号连结档 (symbolic link)，亦即『捷径』文件；")]),t._v(" "),s("li",[t._v("**-u：**若 destination 比 source 旧才升级 destination ！")])]),t._v(" "),s("p",[t._v("用 root 身份，将 root 目录下的 .bashrc 复制到 /tmp 下，并命名为 bashrc")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# cp ~/.bashrc /tmp/bashrc\n[root@www ~]# cp -i ~/.bashrc /tmp/bashrc\ncp: overwrite `/tmp/bashrc'? n  <==n不覆盖，y为覆盖\n")])])]),s("h4",{attrs:{id:"rm-移除文件或目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rm-移除文件或目录"}},[t._v("#")]),t._v(" rm (移除文件或目录)")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" rm [-fir] 文件或目录\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；")]),t._v(" "),s("li",[t._v("-i ：互动模式，在删除前会询问使用者是否动作")]),t._v(" "),s("li",[t._v("-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！")]),t._v(" "),s("li")]),t._v(" "),s("p",[t._v("将刚刚在 cp 的实例中创建的 bashrc 删除掉！")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]# rm -i bashrc\nrm: remove regular file `bashrc'? y\n")])])]),s("p",[t._v("如果加上 -i 的选项就会主动询问喔，避免你删除到错误的档名！")]),t._v(" "),s("h4",{attrs:{id:"mv-移动文件与目录，或修改名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mv-移动文件与目录，或修改名称"}},[t._v("#")]),t._v(" mv (移动文件与目录，或修改名称)")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# mv [-fiu] source destination\n[root@www ~]# mv [options] source1 source2 source3 .... directory\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；")]),t._v(" "),s("li",[t._v("-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！")]),t._v(" "),s("li",[t._v("-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)")])]),t._v(" "),s("p",[t._v("复制一文件，创建一目录，将文件移动到目录中")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# cd /tmp\n[root@www tmp]# cp ~/.bashrc bashrc\n[root@www tmp]# mkdir mvtest\n[root@www tmp]# mv bashrc mvtest\n")])])]),s("p",[t._v("将某个文件移动到某个目录去，就是这样做！")]),t._v(" "),s("p",[t._v("将刚刚的目录名称更名为 mvtest2")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]# mv mvtest mvtest2\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"linux-文件内容查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-文件内容查看"}},[t._v("#")]),t._v(" Linux 文件内容查看")]),t._v(" "),s("p",[t._v("Linux 系统中使用以下命令来查看文件的内容：")]),t._v(" "),s("ul",[s("li",[t._v("cat 由第一行开始显示文件内容")]),t._v(" "),s("li",[t._v("tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！")]),t._v(" "),s("li",[t._v("nl 显示的时候，顺道输出行号！")]),t._v(" "),s("li",[t._v("more 一页一页的显示文件内容")]),t._v(" "),s("li",[t._v("less 与 more 类似，但是比 more 更好的是，他可以往前翻页！")]),t._v(" "),s("li",[t._v("head 只看头几行")]),t._v(" "),s("li",[t._v("tail 只看尾巴几行")])]),t._v(" "),s("p",[t._v("你可以使用 *man [命令]*来查看各个命令的使用文档，如 ：man cp。")]),t._v(" "),s("h4",{attrs:{id:"cat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cat"}},[t._v("#")]),t._v(" cat")]),t._v(" "),s("p",[t._v("由第一行开始显示文件内容")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cat [-AbEnTv]\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-A ：相当於 -vET 的整合选项，可列出一些特殊字符而不是空白而已；")]),t._v(" "),s("li",[t._v("-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！")]),t._v(" "),s("li",[t._v("-E ：将结尾的断行字节 $ 显示出来；")]),t._v(" "),s("li",[t._v("-n ：列印出行号，连同空白行也会有行号，与 -b 的选项不同；")]),t._v(" "),s("li",[t._v("-T ：将 [tab] 按键以 ^I 显示出来；")]),t._v(" "),s("li",[t._v("-v ：列出一些看不出来的特殊字符")])]),t._v(" "),s("p",[t._v("检看 /etc/issue 这个文件的内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# cat /etc/issue\nCentOS release 6.4 (Final)\nKernel \\r on an \\m\n")])])]),s("h4",{attrs:{id:"tac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tac"}},[t._v("#")]),t._v(" tac")]),t._v(" "),s("p",[t._v("tac 与 cat 命令刚好相反，文件内容从最后一行开始显示，可以看出 tac 是 cat 的倒着写！如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# tac /etc/issue\n\nKernel \\r on an \\m\nCentOS release 6.4 (Final)\n")])])]),s("h4",{attrs:{id:"nl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nl"}},[t._v("#")]),t._v(" nl")]),t._v(" "),s("p",[t._v("显示行号")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nl [-bnw] 文件\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-b ：指定行号指定的方式，主要有两种：\n-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；\n-b t ：如果有空行，空的那一行不要列出行号(默认值)；")]),t._v(" "),s("li",[t._v("-n ：列出行号表示的方法，主要有三种：\n-n ln ：行号在荧幕的最左方显示；\n-n rn ：行号在自己栏位的最右方显示，且不加 0 ；\n-n rz ：行号在自己栏位的最右方显示，且加 0 ；")]),t._v(" "),s("li",[t._v("-w ：行号栏位的占用的位数。")])]),t._v(" "),s("p",[t._v("实例一：用 nl 列出 /etc/issue 的内容")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# nl /etc/issue\n     1  CentOS release 6.4 (Final)\n     2  Kernel \\r on an \\m\n")])])]),s("h4",{attrs:{id:"more"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#more"}},[t._v("#")]),t._v(" more")]),t._v(" "),s("p",[t._v("一页一页翻动")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# more /etc/man_db.config\n#\n# Generated automatically from man.conf.in by the\n# configure script.\n#\n# man.conf from man-1.6d\n....(中间省略)....\n--More--(28%)  <== 重点在这一行喔！你的光标也会在这里等待你的命令\n")])])]),s("p",[t._v("在 more 这个程序的运行过程中，你有几个按键可以按的：")]),t._v(" "),s("ul",[s("li",[t._v("空白键 (space)：代表向下翻一页；")]),t._v(" "),s("li",[t._v("Enter ：代表向下翻『一行』；")]),t._v(" "),s("li",[t._v("/字串 ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；")]),t._v(" "),s("li",[t._v(":f ：立刻显示出档名以及目前显示的行数；")]),t._v(" "),s("li",[t._v("q ：代表立刻离开 more ，不再显示该文件内容。")]),t._v(" "),s("li",[t._v("b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。")])]),t._v(" "),s("h4",{attrs:{id:"less"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#less"}},[t._v("#")]),t._v(" less")]),t._v(" "),s("p",[t._v("一页一页翻动，以下实例输出/etc/man.config 文件的内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# less /etc/man.config\n#\n# Generated automatically from man.conf.in by the\n# configure script.\n#\n# man.conf from man-1.6d\n....(中间省略)....\n:   <== 这里可以等待你输入命令！\n")])])]),s("p",[t._v("less 运行时可以输入的命令有：")]),t._v(" "),s("ul",[s("li",[t._v("空白键 ：向下翻动一页；")]),t._v(" "),s("li",[t._v("[pagedown]：向下翻动一页；")]),t._v(" "),s("li",[t._v("[pageup] ：向上翻动一页；")]),t._v(" "),s("li",[t._v("/字串 ：向下搜寻『字串』的功能；")]),t._v(" "),s("li",[t._v("?字串 ：向上搜寻『字串』的功能；")]),t._v(" "),s("li",[t._v("n ：重复前一个搜寻 (与 / 或 ? 有关！)")]),t._v(" "),s("li",[t._v("N ：反向的重复前一个搜寻 (与 / 或 ? 有关！)")]),t._v(" "),s("li",[t._v("q ：离开 less 这个程序；")])]),t._v(" "),s("h4",{attrs:{id:"head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" head")]),t._v(" "),s("p",[t._v("取出文件前面几行")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("head [-n number] 文件\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-n ：后面接数字，代表显示几行的意思")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# head /etc/man.config\n")])])]),s("p",[t._v("默认的情况中，显示前面 10 行！若要显示前 20 行，就得要这样：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# head -n 20 /etc/man.config\n")])])]),s("h4",{attrs:{id:"tail"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tail"}},[t._v("#")]),t._v(" tail")]),t._v(" "),s("p",[t._v("取出文件后面几行")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("tail [-n number] 文件\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-n ：后面接数字，代表显示几行的意思")]),t._v(" "),s("li",[t._v("-f ：表示持续侦测后面所接的档名，要等到按下[ctrl]-c 才会结束 tail 的侦测")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# tail /etc/man.config\n# 默认的情况中，显示最后的十行！若要显示最后的 20 行，就得要这样：\n[root@www ~]# tail -n 20 /etc/man.config\n")])])]),s("h2",{attrs:{id:"linux-用户和用户组管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-用户和用户组管理"}},[t._v("#")]),t._v(" Linux 用户和用户组管理")]),t._v(" "),s("p",[t._v("Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。")]),t._v(" "),s("p",[t._v("用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。")]),t._v(" "),s("p",[t._v("每个用户账号都拥有一个唯一的用户名和各自的口令。")]),t._v(" "),s("p",[t._v("用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。")]),t._v(" "),s("p",[t._v("实现用户账号的管理，要完成的工作主要有如下几个方面：")]),t._v(" "),s("ul",[s("li",[t._v("用户账号的添加、删除与修改。")]),t._v(" "),s("li",[t._v("用户口令的管理。")]),t._v(" "),s("li",[t._v("用户组的管理。")])]),t._v(" "),s("h3",{attrs:{id:"一、linux-系统用户账号的管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、linux-系统用户账号的管理"}},[t._v("#")]),t._v(" 一、Linux 系统用户账号的管理")]),t._v(" "),s("p",[t._v("用户账号的管理工作主要涉及到用户账号的添加、修改和删除。")]),t._v(" "),s("p",[t._v("添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录 Shell 等资源。刚添加的账号是被锁定的，无法使用。")]),t._v(" "),s("h4",{attrs:{id:"_1、添加新的用户账号使用-useradd-命令，其语法如下："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、添加新的用户账号使用-useradd-命令，其语法如下："}},[t._v("#")]),t._v(" 1、添加新的用户账号使用 useradd 命令，其语法如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("useradd 选项 用户名\n")])])]),s("p",[t._v("参数说明：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("选项:")]),t._v(" "),s("ul",[s("li",[t._v("-c comment 指定一段注释性描述。")]),t._v(" "),s("li",[t._v("-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m 选项，可以创建主目录。")]),t._v(" "),s("li",[t._v("-g 用户组 指定用户所属的用户组。")]),t._v(" "),s("li",[t._v("-G 用户组，用户组 指定用户所属的附加组。")]),t._v(" "),s("li",[t._v("-s Shell 文件 指定用户的登录 Shell。")]),t._v(" "),s("li",[t._v("-u 用户号 指定用户的用户号，如果同时有-o 选项，则可以重复使用其他用户的标识号。")])])]),t._v(" "),s("li",[s("p",[t._v("用户名:")]),t._v(" "),s("p",[t._v("指定新账号的登录名。")])])]),t._v(" "),s("h4",{attrs:{id:"实例-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# useradd –d  /home/sam -m sam\n")])])]),s("p",[t._v("此命令创建了一个用户 sam，其中-d 和-m 选项用来为登录名 sam 产生一个主目录 /home/sam（/home 为默认的用户主目录所在的父目录）。")]),t._v(" "),s("h4",{attrs:{id:"实例-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-2"}},[t._v("#")]),t._v(" 实例 2")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# useradd -s /bin/sh -g group –G adm,root gem\n")])])]),s("p",[t._v("此命令新建了一个用户 gem，该用户的登录 Shell 是 "),s("code",[t._v("/bin/sh")]),t._v("，它属于 group 用户组，同时又属于 adm 和 root 用户组，其中 group 用户组是其主组。")]),t._v(" "),s("p",[t._v("这里可能新建组："),s("code",[t._v("#groupadd group及groupadd adm")])]),t._v(" "),s("p",[t._v("增加用户账号就是在/etc/passwd 文件中为新用户增加一条记录，同时更新其他系统文件如/etc/shadow, /etc/group 等。")]),t._v(" "),s("p",[t._v("Linux 提供了集成的系统管理工具 userconf，它可以用来对用户账号进行统一管理。")]),t._v(" "),s("h4",{attrs:{id:"_2、删除帐号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、删除帐号"}},[t._v("#")]),t._v(" 2、删除帐号")]),t._v(" "),s("p",[t._v("如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将/etc/passwd 等系统文件中的该用户记录删除，必要时还删除用户的主目录。")]),t._v(" "),s("p",[t._v("删除一个已有的用户账号使用"),s("code",[t._v("userdel")]),t._v("命令，其格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("userdel 选项 用户名\n")])])]),s("p",[t._v("常用的选项是 "),s("strong",[t._v("-r")]),t._v("，它的作用是把用户的主目录一起删除。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# userdel -r sam\n")])])]),s("p",[t._v("此命令删除用户 sam 在系统文件中（主要是/etc/passwd, /etc/shadow, /etc/group 等）的记录，同时删除用户的主目录。")]),t._v(" "),s("h4",{attrs:{id:"_3、修改帐号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、修改帐号"}},[t._v("#")]),t._v(" 3、修改帐号")]),t._v(" "),s("p",[t._v("修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录 Shell 等。")]),t._v(" "),s("p",[t._v("修改已有用户的信息使用"),s("code",[t._v("usermod")]),t._v("命令，其格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("usermod 选项 用户名\n")])])]),s("p",[t._v("常用的选项包括"),s("code",[t._v("-c, -d, -m, -g, -G, -s, -u以及-o等")]),t._v("，这些选项的意义与"),s("code",[t._v("useradd")]),t._v("命令中的选项一样，可以为用户指定新的资源值。")]),t._v(" "),s("p",[t._v("另外，有些系统可以使用选项：-l 新用户名")]),t._v(" "),s("p",[t._v("这个选项指定一个新的账号，即将原来的用户名改为新的用户名。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# usermod -s /bin/ksh -d /home/z –g developer sam\n")])])]),s("p",[t._v("此命令将用户 sam 的登录 Shell 修改为 ksh，主目录改为/home/z，用户组改为 developer。")]),t._v(" "),s("h4",{attrs:{id:"_4、用户口令的管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、用户口令的管理"}},[t._v("#")]),t._v(" 4、用户口令的管理")]),t._v(" "),s("p",[t._v("用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。")]),t._v(" "),s("p",[t._v("指定和修改用户口令的 Shell 命令是"),s("code",[t._v("passwd")]),t._v("。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。命令的格式为：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("passwd 选项 用户名\n")])])]),s("p",[t._v("可使用的选项：")]),t._v(" "),s("ul",[s("li",[t._v("-l 锁定口令，即禁用账号。")]),t._v(" "),s("li",[t._v("-u 口令解锁。")]),t._v(" "),s("li",[t._v("-d 使账号无口令。")]),t._v(" "),s("li",[t._v("-f 强迫用户下次登录时修改口令。")])]),t._v(" "),s("p",[t._v("如果默认用户名，则修改当前用户的口令。")]),t._v(" "),s("p",[t._v("例如，假设当前用户是 sam，则下面的命令修改该用户自己的口令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ passwd\nOld password:******\nNew password:*******\nRe-enter new password:*******\n")])])]),s("p",[t._v("如果是超级用户，可以用下列形式指定任何用户的口令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# passwd sam\nNew password:*******\nRe-enter new password:*******\n")])])]),s("p",[t._v("普通用户修改自己的口令时，passwd 命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。")]),t._v(" "),s("p",[t._v("为了系统安全起见，用户应该选择比较复杂的口令，例如最好使用 8 位长的口令，口令中包含有大写、小写字母和数字，并且应该与姓名、生日等不相同。")]),t._v(" "),s("p",[t._v("为用户指定空口令时，执行下列形式的命令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# passwd -d sam\n")])])]),s("p",[t._v("此命令将用户 sam 的口令删除，这样用户 sam 下一次登录时，系统就不再允许该用户登录了。")]),t._v(" "),s("p",[t._v("passwd 命令还可以用 -l(lock) 选项锁定某一用户，使其不能登录，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# passwd -l sam\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"二、linux-系统用户组的管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、linux-系统用户组的管理"}},[t._v("#")]),t._v(" 二、Linux 系统用户组的管理")]),t._v(" "),s("p",[t._v("每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同 Linux 系统对用户组的规定有所不同，如 Linux 下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。")]),t._v(" "),s("p",[t._v("用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group 文件的更新。")]),t._v(" "),s("h4",{attrs:{id:"_1、增加一个新的用户组使用-groupadd-命令。其格式如下："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、增加一个新的用户组使用-groupadd-命令。其格式如下："}},[t._v("#")]),t._v(" 1、增加一个新的用户组使用 groupadd 命令。其格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("groupadd 选项 用户组\n")])])]),s("p",[t._v("可以使用的选项有：")]),t._v(" "),s("ul",[s("li",[t._v("-g GID 指定新用户组的组标识号（GID）。")]),t._v(" "),s("li",[t._v("-o 一般与-g 选项同时使用，表示新用户组的 GID 可以与系统已有用户组的 GID 相同。")])]),t._v(" "),s("h4",{attrs:{id:"实例-1："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1："}},[t._v("#")]),t._v(" 实例 1：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# groupadd group1\n")])])]),s("p",[t._v("此命令向系统中增加了一个新组 group1，新组的组标识号是在当前已有的最大组标识号的基础上加 1。")]),t._v(" "),s("h4",{attrs:{id:"实例-2："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-2："}},[t._v("#")]),t._v(" 实例 2：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# groupadd -g 101 group2\n")])])]),s("p",[t._v("此命令向系统中增加了一个新组 group2，同时指定新组的组标识号是 101。")]),t._v(" "),s("h4",{attrs:{id:"_2、如果要删除一个已有的用户组，使用-groupdel-命令，其格式如下："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、如果要删除一个已有的用户组，使用-groupdel-命令，其格式如下："}},[t._v("#")]),t._v(" 2、如果要删除一个已有的用户组，使用 groupdel 命令，其格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("groupdel 用户组\n")])])]),s("h4",{attrs:{id:"例如："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例如："}},[t._v("#")]),t._v(" 例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# groupdel group1\n")])])]),s("p",[t._v("此命令从系统中删除组 group1。")]),t._v(" "),s("h4",{attrs:{id:"_3、修改用户组的属性使用-groupmod-命令。其语法如下："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、修改用户组的属性使用-groupmod-命令。其语法如下："}},[t._v("#")]),t._v(" 3、修改用户组的属性使用 groupmod 命令。其语法如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("groupmod 选项 用户组\n")])])]),s("p",[t._v("常用的选项有：")]),t._v(" "),s("ul",[s("li",[t._v("-g GID 为用户组指定新的组标识号。")]),t._v(" "),s("li",[t._v("-o 与-g 选项同时使用，用户组的新 GID 可以与系统已有用户组的 GID 相同。")]),t._v(" "),s("li",[t._v("-n 新用户组 将用户组的名字改为新名字")])]),t._v(" "),s("h4",{attrs:{id:"实例-1：-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1：-2"}},[t._v("#")]),t._v(" 实例 1：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# groupmod -g 102 group2\n")])])]),s("p",[t._v("此命令将组 group2 的组标识号修改为 102。")]),t._v(" "),s("h4",{attrs:{id:"实例-2：-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-2：-2"}},[t._v("#")]),t._v(" 实例 2：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# groupmod –g 10000 -n group3 group2\n")])])]),s("p",[t._v("此命令将组 group2 的标识号改为 10000，组名修改为 group3。")]),t._v(" "),s("h4",{attrs:{id:"_4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。"}},[t._v("#")]),t._v(" 4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。")]),t._v(" "),s("p",[t._v("用户可以在登录后，使用命令 newgrp 切换到其他用户组，这个命令的参数就是目的用户组。例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ newgrp root\n")])])]),s("p",[t._v("这条命令将当前用户切换到 root 用户组，前提条件是 root 用户组确实是该用户的主组或附加组。类似于用户账号的管理，用户组的管理也可以通过集成的系统管理工具来完成。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"三、与用户账号有关的系统文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、与用户账号有关的系统文件"}},[t._v("#")]),t._v(" 三、与用户账号有关的系统文件")]),t._v(" "),s("p",[t._v("完成用户管理的工作有许多种方法，但是每一种方法实际上都是对有关的系统文件进行修改。")]),t._v(" "),s("p",[t._v("与用户和用户组相关的信息都存放在一些系统文件中，这些文件包括/etc/passwd, /etc/shadow, /etc/group 等。")]),t._v(" "),s("p",[t._v("下面分别介绍这些文件的内容。")]),t._v(" "),s("h4",{attrs:{id:"_1、-etc-passwd-文件是用户管理工作涉及的最重要的一个文件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、-etc-passwd-文件是用户管理工作涉及的最重要的一个文件。"}},[t._v("#")]),t._v(" 1、/etc/passwd 文件是用户管理工作涉及的最重要的一个文件。")]),t._v(" "),s("p",[t._v("Linux 系统中的每个用户都在/etc/passwd 文件中有一个对应的记录行，它记录了这个用户的一些基本属性。")]),t._v(" "),s("p",[t._v("这个文件对所有用户都是可读的。它的内容类似下面的例子：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("＃ cat /etc/passwd\n\nroot:x:0:0:Superuser:/:\ndaemon:x:1:1:System daemons:/etc:\nbin:x:2:2:Owner of system commands:/bin:\nsys:x:3:3:Owner of system files:/usr/sys:\nadm:x:4:4:System accounting:/usr/adm:\nuucp:x:5:5:UUCP administrator:/usr/lib/uucp:\nauth:x:7:21:Authentication administrator:/tcb/files/auth:\ncron:x:9:16:Cron daemon:/usr/spool/cron:\nlisten:x:37:4:Network daemon:/usr/net/nls:\nlp:x:71:18:Printer administrator:/usr/spool/lp:\nsam:x:200:50:Sam san:/home/sam:/bin/sh\n")])])]),s("p",[t._v("从上面的例子我们可以看到，/etc/passwd 中一行记录对应着一个用户，每行记录又被冒号(:)分隔为 7 个字段，其格式和具体含义如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell\n")])])]),s("h4",{attrs:{id:"_1）-用户名-是代表用户账号的字符串。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1）-用户名-是代表用户账号的字符串。"}},[t._v("#")]),t._v(' 1）"用户名"是代表用户账号的字符串。')]),t._v(" "),s("p",[t._v("通常长度不超过 8 个字符，并且由大小写字母和/或数字组成。登录名中不能有冒号(😃，因为冒号在这里是分隔符。")]),t._v(" "),s("p",[t._v("为了兼容起见，登录名中最好不要包含点字符(.)，并且不使用连字符(-)和加号(+)打头。")]),t._v(" "),s("h4",{attrs:{id:"_2）-口令-一些系统中，存放着加密后的用户口令字。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2）-口令-一些系统中，存放着加密后的用户口令字。"}},[t._v("#")]),t._v(" 2）“口令”一些系统中，存放着加密后的用户口令字。")]),t._v(" "),s("p",[t._v("虽然这个字段存放的只是用户口令的加密串，不是明文，但是由于/etc/passwd 文件对所有用户都可读，所以这仍是一个安全隐患。因此，现在许多 Linux 系统（如 SVR4）都使用了 shadow 技术，把真正的加密后的用户口令字存放到/etc/shadow 文件中，而在/etc/passwd 文件的口令字段中只存放一个特殊的字符，例如“x”或者“*”。")]),t._v(" "),s("h4",{attrs:{id:"_3）-用户标识号-是一个整数，系统内部用它来标识用户。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3）-用户标识号-是一个整数，系统内部用它来标识用户。"}},[t._v("#")]),t._v(" 3）“用户标识号”是一个整数，系统内部用它来标识用户。")]),t._v(" "),s("p",[t._v("一般情况下它与用户名是一一对应的。如果几个用户名对应的用户标识号是一样的，系统内部将把它们视为同一个用户，但是它们可以有不同的口令、不同的主目录以及不同的登录 Shell 等。")]),t._v(" "),s("p",[t._v("通常用户标识号的取值范围是 0 ～ 65 535。0 是超级用户 root 的标识号，1 ～ 99 由系统保留，作为管理账号，普通用户的标识号从 100 开始。在 Linux 系统中，这个界限是 500。")]),t._v(" "),s("h4",{attrs:{id:"_4）-组标识号-字段记录的是用户所属的用户组。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4）-组标识号-字段记录的是用户所属的用户组。"}},[t._v("#")]),t._v(" 4）“组标识号”字段记录的是用户所属的用户组。")]),t._v(" "),s("p",[t._v("它对应着/etc/group 文件中的一条记录。")]),t._v(" "),s("h4",{attrs:{id:"_5-注释性描述-字段记录着用户的一些个人情况。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-注释性描述-字段记录着用户的一些个人情况。"}},[t._v("#")]),t._v(" 5)“注释性描述”字段记录着用户的一些个人情况。")]),t._v(" "),s("p",[t._v("例如用户的真实姓名、电话、地址等，这个字段并没有什么实际的用途。在不同的 Linux 系统中，这个字段的格式并没有统一。在许多 Linux 系统中，这个字段存放的是一段任意的注释性描述文字，用做 finger 命令的输出。")]),t._v(" "),s("h4",{attrs:{id:"_6-主目录-，也就是用户的起始工作目录。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-主目录-，也就是用户的起始工作目录。"}},[t._v("#")]),t._v(" 6)“主目录”，也就是用户的起始工作目录。")]),t._v(" "),s("p",[t._v("它是用户在登录到系统之后所处的目录。在大多数系统中，各用户的主目录都被组织在同一个特定的目录下，而用户主目录的名称就是该用户的登录名。各用户对自己的主目录有读、写、执行（搜索）权限，其他用户对此目录的访问权限则根据具体情况设置。")]),t._v(" "),s("h4",{attrs:{id:"_7-用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即-shell。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即-shell。"}},[t._v("#")]),t._v(" 7)用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即 Shell。")]),t._v(" "),s("p",[t._v("Shell 是用户与 Linux 系统之间的接口。Linux 的 Shell 有许多种，每种都有不同的特点。常用的有 sh(Bourne Shell), csh(C Shell), ksh(Korn Shell), tcsh(TENEX/TOPS-20 type C Shell), bash(Bourne Again Shell)等。")]),t._v(" "),s("p",[t._v("系统管理员可以根据系统情况和用户习惯为用户指定某个 Shell。如果不指定 Shell，那么系统使用 sh 为默认的登录 Shell，即这个字段的值为/bin/sh。")]),t._v(" "),s("p",[t._v("用户的登录 Shell 也可以指定为某个特定的程序（此程序不是一个命令解释器）。")]),t._v(" "),s("p",[t._v("利用这一特点，我们可以限制用户只能运行指定的应用程序，在该应用程序运行结束后，用户就自动退出了系统。有些 Linux 系统要求只有那些在系统中登记了的程序才能出现在这个字段中。")]),t._v(" "),s("h4",{attrs:{id:"_8-系统中有一类用户称为伪用户（pseudo-users）。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-系统中有一类用户称为伪用户（pseudo-users）。"}},[t._v("#")]),t._v(" 8)系统中有一类用户称为伪用户（pseudo users）。")]),t._v(" "),s("p",[t._v("这些用户在/etc/passwd 文件中也占有一条记录，但是不能登录，因为它们的登录 Shell 为空。它们的存在主要是方便系统管理，满足相应的系统进程对文件属主的要求。")]),t._v(" "),s("p",[t._v("常见的伪用户如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("伪 用 户 含 义\nbin 拥有可执行的用户命令文件\nsys 拥有系统文件\nadm 拥有帐户文件\nuucp UUCP使用\nlp lp或lpd子系统使用\nnobody NFS使用\n")])])]),s("hr"),t._v(" "),s("h4",{attrs:{id:"拥有帐户文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拥有帐户文件"}},[t._v("#")]),t._v(" 拥有帐户文件")]),t._v(" "),s("p",[s("strong",[t._v("1、除了上面列出的伪用户外，还有许多标准的伪用户，例如：audit, cron, mail, usenet 等，它们也都各自为相关的进程和文件所需要。")])]),t._v(" "),s("p",[t._v("由于/etc/passwd 文件是所有用户都可读的，如果用户的密码太简单或规律比较明显的话，一台普通的计算机就能够很容易地将它破解，因此对安全性要求较高的 Linux 系统都把加密后的口令字分离出来，单独存放在一个文件中，这个文件是/etc/shadow 文件。 有超级用户才拥有该文件读权限，这就保证了用户密码的安全性。")]),t._v(" "),s("p",[s("strong",[t._v("2、/etc/shadow 中的记录行与/etc/passwd 中的一一对应，它由 pwconv 命令根据/etc/passwd 中的数据自动产生")])]),t._v(" "),s("p",[t._v('它的文件格式与/etc/passwd 类似，由若干个字段组成，字段之间用":"隔开。这些字段是：')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志\n")])])]),s("ol",[s("li",[t._v('"登录名"是与/etc/passwd 文件中的登录名相一致的用户账号')]),t._v(" "),s("li",[t._v('"口令"字段存放的是加密后的用户口令字，长度为 13 个字符。如果为空，则对应用户没有口令，登录时不需要口令；如果含有不属于集合 { ./0-9A-Za-z }中的字符，则对应的用户不能登录。')]),t._v(" "),s("li",[t._v('"最后一次修改时间"表示的是从某个时刻起，到用户最后一次修改口令时的天数。时间起点对不同的系统可能不一样。例如在 SCO Linux 中，这个时间起点是 1970 年 1 月 1 日。')]),t._v(" "),s("li",[t._v('"最小时间间隔"指的是两次修改口令之间所需的最小天数。')]),t._v(" "),s("li",[t._v('"最大时间间隔"指的是口令保持有效的最大天数。')]),t._v(" "),s("li",[t._v('"警告时间"字段表示的是从系统开始警告用户到用户密码正式失效之间的天数。')]),t._v(" "),s("li",[t._v('"不活动时间"表示的是用户没有登录活动但账号仍能保持有效的最大天数。')]),t._v(" "),s("li",[t._v('"失效时间"字段给出的是一个绝对的天数，如果使用了这个字段，那么就给出相应账号的生存期。期满后，该账号就不再是一个合法的账号，也就不能再用来登录了。')])]),t._v(" "),s("p",[t._v("下面是/etc/shadow 的一个例子：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("＃ cat /etc/shadow\n\nroot:Dnakfw28zf38w:8764:0:168:7:::\ndaemon:*::0:0::::\nbin:*::0:0::::\nsys:*::0:0::::\nadm:*::0:0::::\nuucp:*::0:0::::\nnuucp:*::0:0::::\nauth:*::0:0::::\ncron:*::0:0::::\nlisten:*::0:0::::\nlp:*::0:0::::\nsam:EkdiSECLWPdSa:9740:0:0::::\n")])])]),s("p",[s("strong",[t._v("3、用户组的所有信息都存放在/etc/group 文件中。")])]),t._v(" "),s("p",[t._v("将用户分组是 Linux 系统中对用户进行管理及控制访问权限的一种手段。")]),t._v(" "),s("p",[t._v("每个用户都属于某个用户组；一个组中可以有多个用户，一个用户也可以属于不同的组。")]),t._v(" "),s("p",[t._v("当一个用户同时是多个组中的成员时，在/etc/passwd 文件中记录的是用户所属的主组，也就是登录时所属的默认组，而其他组称为附加组。")]),t._v(" "),s("p",[t._v("用户要访问属于附加组的文件时，必须首先使用 newgrp 命令使自己成为所要访问的组中的成员。")]),t._v(" "),s("p",[t._v("用户组的所有信息都存放在/etc/group 文件中。此文件的格式也类似于/etc/passwd 文件，由冒号(:)隔开若干个字段，这些字段有：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("组名:口令:组标识号:组内用户列表\n")])])]),s("ol",[s("li",[t._v('"组名"是用户组的名称，由字母或数字构成。与/etc/passwd 中的登录名一样，组名不应重复。')]),t._v(" "),s("li",[t._v('"口令"字段存放的是用户组加密后的口令字。一般 Linux 系统的用户组都没有口令，即这个字段一般为空，或者是*。')]),t._v(" "),s("li",[t._v('"组标识号"与用户标识号类似，也是一个整数，被系统内部用来标识组。')]),t._v(" "),s("li",[t._v('"组内用户列表"是属于这个组的所有用户的列表/b]，不同用户之间用逗号(,)分隔。这个用户组可能是用户的主组，也可能是附加组。')])]),t._v(" "),s("p",[t._v("/etc/group 文件的一个例子如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("root::0:root\nbin::2:root,bin\nsys::3:root,uucp\nadm::4:root,adm\ndaemon::5:root,daemon\nlp::7:root,lp\nusers::20:root,sam\n")])])]),s("h3",{attrs:{id:"四、添加批量用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、添加批量用户"}},[t._v("#")]),t._v(" 四、添加批量用户")]),t._v(" "),s("p",[t._v("添加和删除用户对每位 Linux 系统管理员都是轻而易举的事，比较棘手的是如果要添加几十个、上百个甚至上千个用户时，我们不太可能还使用 useradd 一个一个地添加，必然要找一种简便的创建大量用户的方法。Linux 系统提供了创建大量用户的工具，可以让您立即创建大量用户，方法如下：")]),t._v(" "),s("h4",{attrs:{id:"（1）先编辑一个文本用户文件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）先编辑一个文本用户文件。"}},[t._v("#")]),t._v(" （1）先编辑一个文本用户文件。")]),t._v(" "),s("p",[t._v("每一列按照"),s("code",[t._v("/etc/passwd")]),t._v("密码文件的格式书写，要注意每个用户的用户名、UID、宿主目录都不可以相同，其中密码栏可以留做空白或输入 x 号。一个范例文件 user.txt 内容如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("user001::600:100:user:/home/user001:/bin/bash\nuser002::601:100:user:/home/user002:/bin/bash\nuser003::602:100:user:/home/user003:/bin/bash\nuser004::603:100:user:/home/user004:/bin/bash\nuser005::604:100:user:/home/user005:/bin/bash\nuser006::605:100:user:/home/user006:/bin/bash\n")])])]),s("h4",{attrs:{id:"（2）以-root-身份执行命令-usr-sbin-newusers，从刚创建的用户文件user-txt中导入数据，创建用户："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）以-root-身份执行命令-usr-sbin-newusers，从刚创建的用户文件user-txt中导入数据，创建用户："}},[t._v("#")]),t._v(" （2）以 root 身份执行命令 "),s("code",[t._v("/usr/sbin/newusers")]),t._v("，从刚创建的用户文件"),s("code",[t._v("user.txt")]),t._v("中导入数据，创建用户：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# newusers < user.txt\n")])])]),s("p",[t._v("然后可以执行命令 "),s("code",[t._v("vipw")]),t._v(" 或 "),s("code",[t._v("vi /etc/passwd")]),t._v(" 检查 "),s("code",[t._v("/etc/passwd")]),t._v(" 文件是否已经出现这些用户的数据，并且用户的宿主目录是否已经创建。")]),t._v(" "),s("h4",{attrs:{id:"（3）执行命令-usr-sbin-pwunconv。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（3）执行命令-usr-sbin-pwunconv。"}},[t._v("#")]),t._v(" （3）执行命令/usr/sbin/pwunconv。")]),t._v(" "),s("p",[t._v("将 "),s("code",[t._v("/etc/shadow")]),t._v(" 产生的 "),s("code",[t._v("shadow")]),t._v(" 密码解码，然后回写到 "),s("code",[t._v("/etc/passwd")]),t._v(" 中，并将"),s("code",[t._v("/etc/shadow")]),t._v("的"),s("code",[t._v("shadow")]),t._v("密码栏删掉。这是为了方便下一步的密码转换工作，即先取消 "),s("code",[t._v("shadow password")]),t._v(" 功能。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# pwunconv\n")])])]),s("h4",{attrs:{id:"（4）编辑每个用户的密码对照文件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（4）编辑每个用户的密码对照文件。"}},[t._v("#")]),t._v(" （4）编辑每个用户的密码对照文件。")]),t._v(" "),s("p",[t._v("格式为：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("用户名:密码\n")])])]),s("p",[t._v("实例文件 "),s("code",[t._v("passwd.txt")]),t._v(" 内容如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("user001:123456\nuser002:123456\nuser003:123456\nuser004:123456\nuser005:123456\nuser006:123456\n")])])]),s("h4",{attrs:{id:"（5）以-root-身份执行命令-usr-sbin-chpasswd。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（5）以-root-身份执行命令-usr-sbin-chpasswd。"}},[t._v("#")]),t._v(" （5）以 root 身份执行命令 "),s("code",[t._v("/usr/sbin/chpasswd")]),t._v("。")]),t._v(" "),s("p",[t._v("创建用户密码，"),s("code",[t._v("chpasswd")]),t._v(" 会将经过 "),s("code",[t._v("/usr/bin/passwd")]),t._v(" 命令编码过的密码写入 "),s("code",[t._v("/etc/passwd")]),t._v(" 的密码栏。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# chpasswd < passwd.txt\n")])])]),s("h4",{attrs:{id:"（6）确定密码经编码写入-etc-passwd-的密码栏后。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（6）确定密码经编码写入-etc-passwd-的密码栏后。"}},[t._v("#")]),t._v(" （6）确定密码经编码写入/etc/passwd 的密码栏后。")]),t._v(" "),s("p",[t._v("执行命令 "),s("code",[t._v("/usr/sbin/pwconv")]),t._v(" 将密码编码为 "),s("code",[t._v("shadow password")]),t._v("，并将结果写入 "),s("code",[t._v("/etc/shadow")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# pwconv\n")])])]),s("p",[t._v("这样就完成了大量用户的创建了，之后您可以到/home 下检查这些用户宿主目录的权限设置是否都正确，并登录验证用户密码是否正确。")]),t._v(" "),s("h2",{attrs:{id:"linux-磁盘管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-磁盘管理"}},[t._v("#")]),t._v(" Linux 磁盘管理")]),t._v(" "),s("p",[t._v("Linux 磁盘管理好坏直接关系到整个系统的性能问题。")]),t._v(" "),s("p",[t._v("Linux 磁盘管理常用三个命令为 df、du 和 fdisk。")]),t._v(" "),s("ul",[s("li",[t._v("df：列出文件系统的整体磁盘使用量")]),t._v(" "),s("li",[t._v("du：检查磁盘空间使用量")]),t._v(" "),s("li",[t._v("fdisk：用于磁盘分区")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"df"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#df"}},[t._v("#")]),t._v(" df")]),t._v(" "),s("p",[t._v("df 命令参数功能：检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("df [-ahikHTm] [目录或文件名]\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；")]),t._v(" "),s("li",[t._v("-k ：以 KBytes 的容量显示各文件系统；")]),t._v(" "),s("li",[t._v("-m ：以 MBytes 的容量显示各文件系统；")]),t._v(" "),s("li",[t._v("-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；")]),t._v(" "),s("li",[t._v("-H ：以 M=1000K 取代 M=1024K 的进位方式；")]),t._v(" "),s("li",[t._v("-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；")]),t._v(" "),s("li",[t._v("-i ：不用硬盘容量，而以 inode 的数量来显示")])]),t._v(" "),s("h3",{attrs:{id:"实例-1-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1-2"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),s("p",[t._v("将系统内所有的文件系统列出来！")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# df\nFilesystem      1K-blocks      Used Available Use% Mounted on\n/dev/hdc2         9920624   3823112   5585444  41% /\n/dev/hdc3         4956316    141376   4559108   4% /home\n/dev/hdc1          101086     11126     84741  12% /boot\ntmpfs              371332         0    371332   0% /dev/shm\n")])])]),s("p",[t._v("在 Linux 底下如果 df 没有加任何选项，那么默认会将系统内所有的 (不含特殊内存内的文件系统与 swap) 都以 1 Kbytes 的容量来列出来！")]),t._v(" "),s("h3",{attrs:{id:"实例-2-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-2-2"}},[t._v("#")]),t._v(" 实例 2")]),t._v(" "),s("p",[t._v("将容量结果以易读的容量格式显示出来")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# df -h\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/hdc2             9.5G  3.7G  5.4G  41% /\n/dev/hdc3             4.8G  139M  4.4G   4% /home\n/dev/hdc1              99M   11M   83M  12% /boot\ntmpfs                 363M     0  363M   0% /dev/shm\n")])])]),s("h3",{attrs:{id:"实例-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-3"}},[t._v("#")]),t._v(" 实例 3")]),t._v(" "),s("p",[t._v("将系统内的所有特殊文件格式及名称都列出来")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# df -aT\nFilesystem    Type 1K-blocks    Used Available Use% Mounted on\n/dev/hdc2     ext3   9920624 3823112   5585444  41% /\nproc          proc         0       0         0   -  /proc\nsysfs        sysfs         0       0         0   -  /sys\ndevpts      devpts         0       0         0   -  /dev/pts\n/dev/hdc3     ext3   4956316  141376   4559108   4% /home\n/dev/hdc1     ext3    101086   11126     84741  12% /boot\ntmpfs        tmpfs    371332       0    371332   0% /dev/shm\nnone   binfmt_misc         0       0         0   -  /proc/sys/fs/binfmt_misc\nsunrpc  rpc_pipefs         0       0         0   -  /var/lib/nfs/rpc_pipefs\n")])])]),s("h3",{attrs:{id:"实例-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-4"}},[t._v("#")]),t._v(" 实例 4")]),t._v(" "),s("p",[t._v("将 /etc 底下的可用的磁盘容量以易读的容量格式显示")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# df -h /etc\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/hdc2             9.5G  3.7G  5.4G  41% /\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"du"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#du"}},[t._v("#")]),t._v(" du")]),t._v(" "),s("p",[t._v("Linux du 命令也是查看使用空间的，但是与 df 命令不同的是 Linux du 命令是对文件和目录磁盘使用的空间的查看，还是和 df 命令有一些区别的，这里介绍 Linux du 命令。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("du [-ahskm] 文件或目录名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。")]),t._v(" "),s("li",[t._v("-h ：以人们较易读的容量格式 (G/M) 显示；")]),t._v(" "),s("li",[t._v("-s ：列出总量而已，而不列出每个各别的目录占用容量；")]),t._v(" "),s("li",[t._v("-S ：不包括子目录下的总计，与 -s 有点差别。")]),t._v(" "),s("li",[t._v("-k ：以 KBytes 列出容量显示；")]),t._v(" "),s("li",[t._v("-m ：以 MBytes 列出容量显示；")])]),t._v(" "),s("h3",{attrs:{id:"实例-1-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1-3"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),s("p",[t._v("只列出当前目录下的所有文件夹容量（包括隐藏文件夹）:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# du\n8       ./test4     <==每个目录都会列出来\n8       ./test2\n....中间省略....\n12      ./.gconfd   <==包括隐藏文件的目录\n220     .           <==这个目录(.)所占用的总量\n")])])]),s("p",[t._v("直接输入 du 没有加任何选项时，则 du 会分析当前所在目录的文件与目录所占用的硬盘空间。")]),t._v(" "),s("h3",{attrs:{id:"实例-2-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-2-3"}},[t._v("#")]),t._v(" 实例 2")]),t._v(" "),s("p",[t._v("将文件的容量也列出来")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# du -a\n12      ./install.log.syslog   <==有文件的列表了\n8       ./.bash_logout\n8       ./test4\n8       ./test2\n....中间省略....\n12      ./.gconfd\n220     .\n")])])]),s("h3",{attrs:{id:"实例-3-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-3-2"}},[t._v("#")]),t._v(" 实例 3")]),t._v(" "),s("p",[t._v("检查根目录底下每个目录所占用的容量")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# du -sm /*\n7       /bin\n6       /boot\n.....中间省略....\n0       /proc\n.....中间省略....\n1       /tmp\n3859    /usr     <==系统初期最大就是他了啦！\n77      /var\n")])])]),s("p",[t._v("通配符 * 来代表每个目录。")]),t._v(" "),s("p",[t._v("与 df 不一样的是，du 这个命令其实会直接到文件系统内去搜寻所有的文件数据。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"fdisk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fdisk"}},[t._v("#")]),t._v(" fdisk")]),t._v(" "),s("p",[t._v("fdisk 是 Linux 的磁盘分区表操作工具。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fdisk [-l] 装置名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-l ：输出后面接的装置所有的分区内容。若仅有 fdisk -l 时， 则系统将会把整个系统内能够搜寻到的装置的分区均列出来。")])]),t._v(" "),s("h3",{attrs:{id:"实例-1-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1-4"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),s("p",[t._v("列出所有分区信息")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@AY120919111755c246621 tmp]# fdisk -l\n\nDisk /dev/xvda: 21.5 GB, 21474836480 bytes\n255 heads, 63 sectors/track, 2610 cylinders\nUnits = cylinders of 16065 * 512 = 8225280 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk identifier: 0x00000000\n\n    Device Boot      Start         End      Blocks   Id  System\n/dev/xvda1   *           1        2550    20480000   83  Linux\n/dev/xvda2            2550        2611      490496   82  Linux swap / Solaris\n\nDisk /dev/xvdb: 21.5 GB, 21474836480 bytes\n255 heads, 63 sectors/track, 2610 cylinders\nUnits = cylinders of 16065 * 512 = 8225280 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk identifier: 0x56f40944\n\n    Device Boot      Start         End      Blocks   Id  System\n/dev/xvdb2               1        2610    20964793+  83  Linux\n")])])]),s("h3",{attrs:{id:"实例-2-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-2-4"}},[t._v("#")]),t._v(" 实例 2")]),t._v(" "),s("p",[t._v("找出你系统中的根目录所在磁盘，并查阅该硬盘内的相关信息")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# df /            <==注意：重点在找出磁盘文件名而已\nFilesystem           1K-blocks      Used Available Use% Mounted on\n/dev/hdc2              9920624   3823168   5585388  41% /\n\n[root@www ~]# fdisk /dev/hdc  <==仔细看，不要加上数字喔！\nThe number of cylinders for this disk is set to 5005.\nThere is nothing wrong with that, but this is larger than 1024,\nand could in certain setups cause problems with:\n1) software that runs at boot time (e.g., old versions of LILO)\n2) booting and partitioning software from other OSs\n   (e.g., DOS FDISK, OS/2 FDISK)\n\nCommand (m for help):     <==等待你的输入！\n")])])]),s("p",[t._v("输入 m 后，就会看到底下这些命令介绍")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Command (m for help): m   <== 输入 m 后，就会看到底下这些命令介绍\nCommand action\n   a   toggle a bootable flag\n   b   edit bsd disklabel\n   c   toggle the dos compatibility flag\n   d   delete a partition            <==删除一个partition\n   l   list known partition types\n   m   print this menu\n   n   add a new partition           <==新增一个partition\n   o   create a new empty DOS partition table\n   p   print the partition table     <==在屏幕上显示分割表\n   q   quit without saving changes   <==不储存离开fdisk程序\n   s   create a new empty Sun disklabel\n   t   change a partition's system id\n   u   change display/entry units\n   v   verify the partition table\n   w   write table to disk and exit  <==将刚刚的动作写入分割表\n   x   extra functionality (experts only)\n")])])]),s("p",[t._v("离开 fdisk 时按下 "),s("code",[t._v("q")]),t._v("，那么所有的动作都不会生效！相反的， 按下"),s("code",[t._v("w")]),t._v("就是动作生效的意思。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Command (m for help): p  <== 这里可以输出目前磁盘的状态\n\nDisk /dev/hdc: 41.1 GB, 41174138880 bytes        <==这个磁盘的文件名与容量\n255 heads, 63 sectors/track, 5005 cylinders      <==磁头、扇区与磁柱大小\nUnits = cylinders of 16065 * 512 = 8225280 bytes <==每个磁柱的大小\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/hdc1   *           1          13      104391   83  Linux\n/dev/hdc2              14        1288    10241437+  83  Linux\n/dev/hdc3            1289        1925     5116702+  83  Linux\n/dev/hdc4            1926        5005    24740100    5  Extended\n/dev/hdc5            1926        2052     1020096   82  Linux swap / Solaris\n# 装置文件名 启动区否 开始磁柱    结束磁柱  1K大小容量 磁盘分区槽内的系统\n\nCommand (m for help): q\n")])])]),s("p",[t._v("想要不储存离开吗？按下 q 就对了！不要随便按 w 啊！")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("p")]),t._v(" 可以列出目前这颗磁盘的分割表信息，这个信息的上半部在显示整体磁盘的状态。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"磁盘格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘格式化"}},[t._v("#")]),t._v(" 磁盘格式化")]),t._v(" "),s("p",[t._v("磁盘分割完毕后自然就是要进行文件系统的格式化，格式化的命令非常的简单，使用 "),s("code",[t._v("mkfs")]),t._v("（make filesystem） 命令。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mkfs [-t 文件系统格式] 装置文件名\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-t ：可以接文件系统格式，例如 ext3, ext2, vfat 等(系统有支持才会生效)")])]),t._v(" "),s("h3",{attrs:{id:"实例-1-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1-5"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),s("p",[t._v("查看 mkfs 支持的文件格式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# mkfs[tab][tab]\nmkfs         mkfs.cramfs  mkfs.ext2    mkfs.ext3    mkfs.msdos   mkfs.vfat\n")])])]),s("p",[t._v("按下两个[tab]，会发现 mkfs 支持的文件格式如上所示。")]),t._v(" "),s("h3",{attrs:{id:"实例-2-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-2-5"}},[t._v("#")]),t._v(" 实例 2")]),t._v(" "),s("p",[t._v("将分区 /dev/hdc6（可指定你自己的分区） 格式化为 ext3 文件系统：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# mkfs -t ext3 /dev/hdc6\nmke2fs 1.39 (29-May-2006)\nFilesystem label=                <==这里指的是分割槽的名称(label)\nOS type: Linux\nBlock size=4096 (log=2)          <==block 的大小配置为 4K\nFragment size=4096 (log=2)\n251392 inodes, 502023 blocks     <==由此配置决定的inode/block数量\n25101 blocks (5.00%) reserved for the super user\nFirst data block=0\nMaximum filesystem blocks=515899392\n16 block groups\n32768 blocks per group, 32768 fragments per group\n15712 inodes per group\nSuperblock backups stored on blocks:\n        32768, 98304, 163840, 229376, 294912\n\nWriting inode tables: done\nCreating journal (8192 blocks): done <==有日志记录\nWriting superblocks and filesystem accounting information: done\n\nThis filesystem will be automatically checked every 34 mounts or\n180 days, whichever comes first.  Use tune2fs -c or -i to override.\n# 这样就创建起来我们所需要的 Ext3 文件系统了！简单明了！\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"磁盘检验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘检验"}},[t._v("#")]),t._v(" 磁盘检验")]),t._v(" "),s("p",[t._v("fsck（file system check）用来检查和维护不一致的文件系统。")]),t._v(" "),s("p",[t._v("若系统掉电或磁盘发生问题，可利用 fsck 命令对文件系统进行检查。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fsck [-t 文件系统] [-ACay] 装置名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数")]),t._v(" "),s("li",[t._v("-s : 依序一个一个地执行 fsck 的指令来检查")]),t._v(" "),s("li",[t._v("-A : 对/etc/fstab 中所有列出来的 分区（partition）做检查")]),t._v(" "),s("li",[t._v("-C : 显示完整的检查进度")]),t._v(" "),s("li",[t._v("-d : 打印出 e2fsck 的 debug 结果")]),t._v(" "),s("li",[t._v("-p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行")]),t._v(" "),s("li",[t._v("-R : 同时有 -A 条件时，省略 / 不检查")]),t._v(" "),s("li",[t._v("-V : 详细显示模式")]),t._v(" "),s("li",[t._v("-a : 如果检查有错则自动修复")]),t._v(" "),s("li",[t._v("-r : 如果检查有错则由使用者回答是否修复")]),t._v(" "),s("li",[t._v("-y : 选项指定检测每个文件是自动输入 yes，在不确定那些是不正常的时候，可以执行 # fsck -y 全部检查修复。")])]),t._v(" "),s("h3",{attrs:{id:"实例-1-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1-6"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),s("p",[t._v("查看系统有多少文件系统支持的 fsck 命令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# fsck[tab][tab]\nfsck         fsck.cramfs  fsck.ext2    fsck.ext3    fsck.msdos   fsck.vfat\n")])])]),s("h3",{attrs:{id:"实例-2-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-2-6"}},[t._v("#")]),t._v(" 实例 2")]),t._v(" "),s("p",[t._v("强制检测 /dev/hdc6 分区:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# fsck -C -f -t ext3 /dev/hdc6\nfsck 1.39 (29-May-2006)\ne2fsck 1.39 (29-May-2006)\nPass 1: Checking inodes, blocks, and sizes\nPass 2: Checking directory structure\nPass 3: Checking directory connectivity\nPass 4: Checking reference counts\nPass 5: Checking group summary information\nvbird_logical: 11/251968 files (9.1% non-contiguous), 36926/1004046 blocks\n")])])]),s("p",[t._v("如果没有加上 -f 的选项，则由于这个文件系统不曾出现问题，检查的经过非常快速！若加上 -f 强制检查，才会一项一项的显示过程。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"磁盘挂载与卸除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘挂载与卸除"}},[t._v("#")]),t._v(" 磁盘挂载与卸除")]),t._v(" "),s("p",[t._v("Linux 的磁盘挂载使用 "),s("code",[t._v("mount")]),t._v(" 命令，卸载使用 "),s("code",[t._v("umount")]),t._v(" 命令。")]),t._v(" "),s("p",[t._v("磁盘挂载语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mount [-t 文件系统] [-L Label名] [-o 额外选项] [-n]  装置文件名  挂载点\n")])])]),s("h3",{attrs:{id:"实例-1-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例-1-7"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),s("p",[t._v("用默认的方式，将刚刚创建的 /dev/hdc6 挂载到 /mnt/hdc6 上面！")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# mkdir /mnt/hdc6\n[root@www ~]# mount /dev/hdc6 /mnt/hdc6\n[root@www ~]# df\nFilesystem           1K-blocks      Used Available Use% Mounted on\n.....中间省略.....\n/dev/hdc6              1976312     42072   1833836   3% /mnt/hdc6\n")])])]),s("p",[t._v("磁盘卸载命令 "),s("code",[t._v("umount")]),t._v(" 语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("umount [-fn] 装置文件名或挂载点\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下；")]),t._v(" "),s("li",[t._v("-n ：不升级 /etc/mtab 情况下卸除。")])]),t._v(" "),s("p",[t._v("卸载/dev/hdc6")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]# umount /dev/hdc6\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);